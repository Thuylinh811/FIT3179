{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "width": 500,
  "height": 545,
  "padding": 30,
  "autosize": {"type": "none", "contains": "padding"},
  "signals": [
    {"name": "radius", "update": "150"},
{
      "name": "clear",
      "value": true,
      "on": [
        {"events": "mouseup[!event.item]", "update": "true", "force": true}
      ]
    },
    {
      "name": "shift",
      "value": false,
      "on": [
        {
          "events": "@legendSymbol:click, @legendLabel:click",
          "update": "event.shiftKey",
          "force": true
        }
      ]
    },
    {
      "name": "clicked",
      "value": null,
      "on": [
        {
          "events": "@legendSymbol:click, @legendLabel:click",
          "update": "{values: datum.value}",
          "force": true
        }
      ]
    },
    {
      "name": "brush",
      "value": 0,
      "on": [
        {"events": {"signal": "clear"}, "update": "clear ? [0, 0] : brush"},
        {"events": "@xaxis:mousedown", "update": "[x(), x()]"},
        {
          "events": "[@xaxis:mousedown, window:mouseup] > window:mousemove!",
          "update": "[brush[0], clamp(x(), 0, width)]"
        },
        {
          "events": {"signal": "delta"},
          "update": "clampRange([anchor[0] + delta, anchor[1] + delta], 0, width)"
        }
      ]
    },
    {
      "name": "anchor",
      "value": null,
      "on": [{"events": "@brush:mousedown", "update": "slice(brush)"}]
    },
    {
      "name": "xdown",
      "value": 0,
      "on": [{"events": "@brush:mousedown", "update": "x()"}]
    },
    {
      "name": "delta",
      "value": 0,
      "on": [
        {
          "events": "[@brush:mousedown, window:mouseup] > window:mousemove!",
          "update": "x() - xdown"
        }
      ]
    },
    {
      "name": "domain",
      "on": [
        {
          "events": {"signal": "brush"},
          "update": "span(brush) ? invert('x', brush) : null"
        }
      ]
    },
    {
      "name": "year_selection",
      "value": 2015,
      "bind": {
        "input": "range",
        "min": 2011,
        "max": 2015,
        "step": 1,
        "name": "Year Selection:"
      }
    }
  ],
  "data": [
    {
      "name": "table",
      "url": "https://raw.githubusercontent.com/Thuylinh811/FIT3179/main/shanghaiData%20long%20format%20data.csv",
      "format": {"type": "csv", "delimiter": ","},
      "transform": [
        {"type": "filter", "expr": "datum.year == year_selection"}
      ]
    },
    {
      "name": "keys",
      "source": "table",
      "transform": [{"type": "aggregate", "groupby": ["key"]}]
    },
    {
      "name": "selected",
      "on": [
        {"trigger": "clear", "remove": true},
        {"trigger": "!shift", "remove": true},
        {"trigger": "!shift && clicked", "insert": "clicked"},
        {"trigger": "shift && clicked", "toggle": "clicked"}
      ]
    }
  ],
  "scales": [
    {
      "name": "angular",
      "type": "point",
      "range": {"signal": "[-PI, PI]"},
      "padding": 0.5,
      "domain": {"data": "table", "field": "key"}
    },
    {
      "name": "radial",
      "type": "linear",
      "range": {"signal": "[0, radius]"},
      "zero": true,
      "nice": false,
      "domain": {"data": "table", "field": "value"},
      "domainMin": 0
    },
    {
      "name": "color",
      "type": "ordinal",
      "domain": {"data": "table", "field": "category"},
      "range": [
          "#4b63b7",
          "#ec3b83",
          "#431c51",
          "#7e4792",
          "#b66576",
          "#ffd312",
          "#365071",
          "#e66b6e",
          "#6d5a7a",
          "#ebac8b"
      ]
    }
  ],
  "encode": {"enter": {"x": {"signal": "radius"}, "y": {"signal": "radius"}}},
  "marks": [
    {
      "type": "group",
      "name": "categories",
      "zindex": 1,
      "from": {
        "facet": {"data": "table", "name": "facet", "groupby": ["category"]}
      },
      "marks": [
        {
          "type": "line",
          "name": "category-line",
          "from": {"data": "facet"},
          "encode": {
            "update": {
              "interpolate": {"value": "linear-closed"},
              "x": {
                "signal": "scale('radial', datum.value) * cos(scale('angular', datum.key))"
              },
              "y": {
                "signal": "scale('radial', datum.value) * sin(scale('angular', datum.key))"
              },
              "stroke": {"scale": "color", "field": "category"},
              "strokeWidth": [
                {
                  "test": "(!domain || inrange(datum.value, domain)) && (!length(data('selected')) || indata('selected', 'values', datum.category))",
                  "value": 2
                },
                {"value": 0}
              ],
              "fill": {"scale": "color", "field": "category"},
              "fillOpacity": [
                {
                  "test": "(!domain || inrange(datum.value, domain)) && (!length(data('selected')) || indata('selected', 'values', datum.category))",
                  "value": 0.5
                },
                {"value": 0}
              ]
            }
          }
        },
        {
          "type": "symbol",
          "style": ["circle"],
          "name": "category-point",
          "from": {"data": "facet"},
          "encode": {
            "update": {
              "interpolate": {"value": "linear-closed"},
              "x": {
                "signal": "scale('radial', datum.value) * cos(scale('angular', datum.key))"
              },
              "y": {
                "signal": "scale('radial', datum.value) * sin(scale('angular', datum.key))"
              },
              "fill": {"scale": "color", "field": "category"},
              "fillOpacity": [
                {
                  "test": "(!domain || inrange(datum.value, domain)) && (!length(data('selected')) || indata('selected', 'values', datum.category))",
                  "value": 1
                },
                {"value": 0}
              ],
              "tooltip": {
                "signal": "{'Country': datum.category, 'Category': datum.key, 'Score': datum.value}"
              }
            }
          }
        }
      ]
    },
    {
      "type": "rule",
      "name": "radial-grid",
      "from": {"data": "keys"},
      "zindex": 0,
      "encode": {
        "enter": {
          "x": {"value": 0},
          "y": {"value": 0},
          "x2": {"signal": "radius * cos(scale('angular', datum.key))"},
          "y2": {"signal": "radius * sin(scale('angular', datum.key))"},
          "stroke": {"value": "lightgray"},
          "strokeWidth": {"value": 1}
        }
      }
    },
    {
      "type": "text",
      "name": "key-label",
      "from": {"data": "keys"},
      "zindex": 1,
      "encode": {
        "enter": {
          "x": {"signal": "(radius + 5) * cos(scale('angular', datum.key))"},
          "y": {"signal": "(radius + 5) * sin(scale('angular', datum.key))"},
          "text": {"field": "key"},
          "align": [
            {
              "test": "abs(scale('angular', datum.key)) > PI / 2",
              "value": "right"
            },
            {"value": "left"}
          ],
          "baseline": [
            {"test": "scale('angular', datum.key) > 0", "value": "top"},
            {"test": "scale('angular', datum.key) == 0", "value": "middle"},
            {"value": "bottom"}
          ],
          "fill": {"value": "black"},
          "fontWeight": {"value": "bold"}
        }
      }
    },
    {
      "type": "line",
      "name": "outer-line",
      "from": {"data": "radial-grid"},
      "encode": {
        "enter": {
          "interpolate": {"value": "linear-closed"},
          "x": {"field": "x2"},
          "y": {"field": "y2"},
          "stroke": {"value": "lightgray"},
          "strokeWidth": {"value": 1}
        }
      }
    }
  ],
  "legends": [
    {
      "fill": "color",
      "title": "University",
      "orient": "none",
      "gridAlign": "each",
      "direction": "vertical",
      "legendX": -180,
      "legendY": 205,
      "titleAnchor": "start",
      "encode": {
        "symbols": {
          "name": "legendSymbol",
          "interactive": true,
          "update": {
            "fillOpacity": [
              {
                "test": "!length(data('selected')) || indata('selected', 'values', datum.value)",
                "value": 1
              },
              {"value": 0.15}
            ]
          }
        },
        "labels": {
          "name": "legendLabel",
          "interactive": true,
          "update": {
            "text": {"field": "value"},
            "opacity": [
              {
                "test": "!length(data('selected')) || indata('selected', 'values', datum.value)",
                "value": 1
              },
              {"value": 0.25}
            ]
          }
        }
      },
      "labelFontSize": 12,
      "titleFontSize": 13,
      "labelFont": "Open Sans",
      "titleFont": "Open Sans",
      "symbolSize": 100,
      "labelLimit": 200
    }
  ],
  "config": {}
}